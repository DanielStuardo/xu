#use math

#define TIC(V)   V <- seconds("") \\  // hay que poner '\\' para señalar que hay más líneas
                 write "TIME=",V  \\
                 V <- V * 10      \\
                 write "\nNEW TIME=",V
/* comentario   */
#define TOC(V)   write "\n\nESTE ES UN MENSAJE UMMITA: ",V,"\n" /* nada pero no es nada más */

#include include/por.def
vars:
  par:=$1:string
  log:=$2:^boolean
  non:=$3:^string
  nums:=$4:^number
  
  v:=string
  m,l:=^number
  n:=number

/* Este programa realiza una prueba
   de conceptos
   Bueno. funciona a medias...
   jajaja   */

functions: /* funciones */
  y():void
    a:=^string
  begin:
     dim a(5)
     a<-"'// hola' "
     write "//EN Y=",a,"\nSIZE = ",[@a],"\nTYPE=",type(a),"\n"
  end

  //
  x():void
    a:=^number
  begin:
     dim a(10)
     a<-10
     .y()
     write "EN X=",a,"\nSIZE = ",[@a],"\nTYPE=",type(a),"\n"
  end

algorithm:  // inicio de programa

  TIC(n)

  TOC("Chúpalo")
  goodbye
  
  write "PARAMETRO 1=",par,"\n"
  pause
  ."PARAMETROS SIZE=",[@ non],"\n"*2

  pause

 // use non
  for each v inlist non
     write "LISTA PARAMETRO 4=",v,"\n"
  next
  
  pause
  for n<-1 to [[@log] 2]
     write "LISTA PARAMETRO 2=",[log n],"\n"
  next
  pause

  for n<-1 to [[@nums] 2]
     write "LISTA PARAMETRO 3=",[nums n],"hola","\n"
  next
  pause  
  goodbye

  .x()  // llama a funcion que invoca a otra en forma cíclica
  
  dim m(100,100,20)
  dim l(100,100,20)
 ///// dim m(500,500)
 // dim l(500,500)
  n<-seconds("")
//  m<-l<-100
  {m,m}<-{100,mth.ceil(mth.rand(m))}
  {l,l}<-{100,mth.ceil(mth.rand(l))}
//
  pause  
/********************************
     TIEMPO CARGA=4.66                                                                         
     ELEMENTO 100,100,1,1 = 67
                         
     TIEMPO CALCULO=1.06
     ELEMENTO 100,100,1,1 = 3551
*********************************/
//  ."kkk"
//    m<-m*10
  write "\nTIEMPO CARGA=",seconds("")-n,"\n"
  write "ELEMENTO M 100,100 = ",[:m 100 100 10],"\n"
  write "ELEMENTO L 100,100 = ",[:l 100 100 10],"\n"
//  show(m 3)
  
  write "\niguales a 50 en M =",[\m "=" 50],"\n" 
  
  n<-seconds("")
  m<-m/l
  write "\nTIEMPO CALCULO=",seconds("")-n,"\n"
  write "ELEMENTO M 100,100 = ",[:m 100 100 10 ],"\n"
  
//  show(m 3)
stop
